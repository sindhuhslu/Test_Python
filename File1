#TASKS ARE IN BETWEEN THE CODE. I can only go to question2 after solving question1 tasks.

# Copy your solutions (Task 1a, Task 1b) into the text field below. Separate the two solutions clearly within the text field with:

######################
# Task 1a ############

# < your solution for Task 1a >

car_trips = [500.455, 23.45, 986.4567, 12.55, 234.8675, 0.621331, 32.6794]

car_trips_new = [trip / 0.621371 for trip in car_trips]

print(1, car_trips_new)



#Given the following list of car trips in miles

car_trips = [500.455, 23.45, 986.4567, 12.55, 234.8675, 0.621331, 32.6794]

#Task 1a:
#Change(i.e. program) with a list comprehension all given car trips in miles in a list of kilometre
# The following applies: 1km = 0.621371 miles
car_trips_new = []
# car_trips_new = ********** your solution **************
print(1, car_trips_new)



######################
# Task 1b ############

# < your solution for Task 1b >

formated_car_trips_new = [round(trip, 1) for trip in car_trips_new]

print(2, formated_car_trips_new)


#task 1b:
#reformat the resulting list kilometers so that only ONE decimal place is displayed
# This task should also be solved with list comprehension


# car_trips_new = [805.4045006928227, 37.73912847558061, 1587.5486625542549, 20.19727344855167,
#                  377.9827188587816, 0.9999356262200841, 52.592412584430235]

#the solution list must contain float numbers NOT Strings

formated_car_trips_new = []
# formated_car_trips_new = ********** your solution **************
print(2, formated_car_trips_new)

#the correct solution should be something like this:
# 2[805.4, 37.7, 1587.5, 20.2, 378.0, 1.0, 52.6]

#Solution:











# Use the map() function to double each even number in the list (=numbers) while leaving odd numbers unchanged.
#That means, apply 'db_number()' on each element in list
#  1. Complete the function 'db_number()' that doubles even  numbers only and
# 2. apply it to each element of the list with the map function

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21, 32, 43, 54, 65, 76, 87, 98 ]

def db_number(num):
    pass      # ********** your solution **************

db_e_numbers = []
# db_e_numbers = ********** your solution **************

print(1, db_e_numbers)


######################
# Task 2b ############

#Write a script that returns teh square roots of all positive numbers in a list(numbers) using map()
#ignoring negative numbers and zero. You have to use filter() and aslo map() functions



import math



numbers = [-9, 0, 4, 9, 16, 25, -25, 32, -7, 9.3333]

#first, filter out positive numbers 'p_numbers' (HINT: use filter() and lambda fucntion

p_numbers = []
# p_numbers = ********** your solution **************

#The, calculate square roots 'sr' of the positive numbers (HINT: use 'math.sqrt')

sr = []
# sr = ********** your solution **************

print(2, sr)

